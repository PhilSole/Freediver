const FD = {};
FD.preload = function() {
    console.log('preload');

    this.load.setBaseURL('/assets/');
    this.load.image('water', 'backgrounds/under-water-mob.png');
}
FD.create = function() {
    console.log('create');

    //===========================
    // World
    //===========================
    let worldWidth = 640;
    let worldHeight = 360;

    this.matter.world.setBounds(0, 0, worldWidth, worldHeight); 
    
    
    //===========================
    // Background
    //===========================
    // let background = this.add.image(worldWidth/2, worldHeight/2, 'water');

    // background.displayWidth = worldWidth;
    // background.displayHeight = worldHeight;


    //===========================
    // Terrain            
    //===========================


    //===========================
    // Player
    //===========================


    //===========================
    // Other characters
    //===========================


    //===========================
    // Physics experiments
    //===========================
    FD.circle1 = this.matter.add.circle(100, 0, 15, {
        angle: 1,
        restitution: 1,
        frictionAir: .5
    });

    
    //===========================
    // Controls
    //===========================
    this.matter.add.mouseSpring();
         
}
FD.update = function() {
    // console.log(FD.circle1.speed);
} 
FD.metre = 15;

FD.config = {
    type: Phaser.AUTO, // Either WebGL or canvas
    width: 640,
    height: 360,
    backgroundColor: '#c4dedf',
    parent: 'gameContainer',
    pixelArt: true, // pixel graphics won't blur when scaling. https://www.html5gamedevs.com/topic/36607-scaling-the-canvas-for-pixel-art/
    physics: {
        default: 'matter',
        matter: {
            debug: { // See debug options.js example
                showAngleIndicator: true,
                showCollisions: true,
                showSleeping: true,
                showJoint: true,
            },
            enableSleeping: true, // Performance gain - Bodies that come to rest can sleep and wake. https://github.com/liabru/matter-js/issues/354
            gravity: { 
                y: 1 
            },
            plugins: {
                attractors: true
            }
        }
    },
    scale: {
        // parent: 'yourgamediv',
        mode: Phaser.Scale.FIT,
        autoCenter: Phaser.Scale.CENTER_BOTH,
        // width: 800,
        // height: 600
    },
    scene: {
        preload: FD.preload,
        create: FD.create,
        update: FD.update
    }
};
function ready(callbackFunc) {
    if (document.readyState !== 'loading') {
        callbackFunc();
    } else {
        document.addEventListener('DOMContentLoaded', callbackFunc);
    }
}

ready(function () {
    console.log('under way');

    FD.game = new Phaser.Game(FD.config);
});